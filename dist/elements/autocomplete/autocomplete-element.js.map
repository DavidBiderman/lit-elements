{"version":3,"file":"autocomplete-element.js","sourceRoot":"","sources":["../../../src/elements/autocomplete/autocomplete-element.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport { LitElement, html } from \"lit\";\nimport { customElement, property } from 'lit/decorators.js';\nimport { unsafeHTML } from 'lit/directives/unsafe-html.js';\nimport { repeat } from \"lit/directives/repeat.js\";\nimport MockService from \"../../services/mock-service\";\nimport KEY_MAPPING from \"../../utils/keymapper.utils\"\nimport autocompleteStyle from './autocomplete.style';\n\ndeclare const fuzzysort: any;\n\n@customElement('auto-complete')\nclass AutocompleteElement extends LitElement {\n    readonly searchOptions = {\n        limit: 20,\n        threshold: -4000,\n        allowTypo: true\n    };\n    readonly upDownKeys = [KEY_MAPPING.UP_ARROW, KEY_MAPPING.DOWN_ARROW];    \n    private data: Array<string>;\n    \n    @property() results: Array<{value: string, markup: string}> = []; \n    @property() selected: number = -1;\n\n    static override get styles() {\n        return [autocompleteStyle];\n    }\n\n    constructor() {\n        super();\n        this.data = MockService.getData();\n        this.data.forEach((datum: string) => fuzzysort.prepare(datum));\n        document.querySelector('body')?.addEventListener('focusout', () => this.clear());\n    }\n    \n    valueUpdated = (e: any) => {\n        if (e.target.value.length > 2) {\n            const searchResults = fuzzysort.go(e.target.value, this.data, this.searchOptions);\n            this.results = searchResults.map((result: any) => ({value: result.target, markup:fuzzysort.highlight(result)}));\n        } else {\n            this.results = [];\n        }\n    }\n\n    itemSelected = (item: string) => {\n        if (item) {\n            console.log(item);\n            this.clear();\n        }\n    }\n\n    moveSelected = (e:any) => {\n        if (e.which === KEY_MAPPING.DOWN_ARROW && this.selected < this.results.length - 1) {\n            this.selected++; \n        } else if (e.which === KEY_MAPPING.UP_ARROW && this.selected > -1) {\n            this.selected--;\n        }\n        if (this.selected > -1 && this.selected < this.results.length - 1) {\n            const focusEl = (this.renderRoot.querySelectorAll('.result-item')[this.selected] as HTMLElement);\n            focusEl.scrollIntoView({ block: \"center\", inline: \"center\", behavior: \"smooth\" });\n        }\n\n    }\n\n    clear = () => {\n        this.results = [];\n        (this.renderRoot.querySelector('#search-box') as HTMLInputElement).value = '';\n        this.selected = -1;\n    }\n\n    keyPressed = (e: any) => {\n        if (e.which === KEY_MAPPING.ESCAPE_KEY) {\n            this.clear();\n            return;\n        } \n        if (this.upDownKeys.includes(e.which)) { \n            this.moveSelected(e);\n            return;\n        }\n        if (e.which === KEY_MAPPING.ENTER_KEY && this.selected > -1) {\n            this.itemSelected(this.results[this.selected].value);\n            return;\n        }\n    }\n\n\n    override render = () => {\n        return html`\n            <div id=\"container\" tabindex=\"0\" @keydown=${this.keyPressed}>\n                <form autocomplete=\"off\" @submit=${(e:any) => e.preventDefault()}>\n                    <label for=\"search-box\">Clipboard</label>\n                    <input id=\"search-box\" type=\"text\" placeholder=\"Search...\" @input=${this.valueUpdated}/>\n                </form>\n                <div id=\"results\">\n                    <ul id=\"result-items\">\n                        ${repeat(this.results, (result) => result, \n                            (result, index) => html`<li class=\"result-item ${this.selected === index ? 'selected' : ''}\" @click=${() => this.itemSelected(result.value)}>\n                                                <img class=\"clipboard-image\" src=\"../assets/clipboard.svg\"/>\n                                                <p>${unsafeHTML(result.markup)}</p>\n                                            </li>`)}\n                    </ul>    \n                </div>\n            </div>\n        `;\n    }\n}\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n        \"auto-complete\": AutocompleteElement,\n    }\n}\n"]}